@model Plan_A_Plant.Models.ViewModels.OfferVM

@{
    ViewData["Title"] = "Edit Offer";
}

<h2 class="text-center">Edit Offer</h2>

<form asp-action="Edit" class="mx-auto p-3 border rounded" style="max-width: 600px;">
    <div class="form-horizontal">
        <h4 class="text-primary">Offer Details</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

        @* Hidden input to bind OfferId *@
        <input type="hidden" asp-for="Offer.OfferId" />

        <div class="form-group">
            <label asp-for="Offer.OfferName" class="control-label"></label>
            <input asp-for="Offer.OfferName" class="form-control" />
            <span asp-validation-for="Offer.OfferName" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Offer.Offertype" class="control-label"></label>
            <select asp-for="Offer.Offertype" class="form-control" id="OfferTypeSelect">
                <option value="Product">Product</option>
                <option value="Category">Category</option>
                <option value="Referral">Referral</option>
            </select>
            <span asp-validation-for="Offer.Offertype" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Offer.OfferDiscount" class="control-label"></label>
            <input asp-for="Offer.OfferDiscount" class="form-control" />
            <span asp-validation-for="Offer.OfferDiscount" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Offer.OfferDescription" class="control-label"></label>
            <textarea asp-for="Offer.OfferDescription" class="form-control" rows="4"></textarea>
            <span asp-validation-for="Offer.OfferDescription" class="text-danger"></span>
        </div>

        <div class="form-group" id="CategorySelectDiv" style="display: none;">
            <label asp-for="SelectedCategoryId" class="control-label"></label>
            <select asp-for="SelectedCategoryId" class="form-control" asp-items="@(new SelectList(Model.Categories, "Id", "Name"))">
                <option value="">-- Select Category --</option>
            </select>
            <span asp-validation-for="SelectedCategoryId" class="text-danger"></span>
        </div>

        <div class="form-group" id="ProductSelectDiv" style="display: none;">
            <label asp-for="SelectedProductId" class="control-label"></label>
            <select asp-for="SelectedProductId" class="form-control" asp-items="@(new SelectList(Model.Products, "Id", "Name"))">
                <option value="">-- Select Product --</option>
            </select>
            <span asp-validation-for="SelectedProductId" class="text-danger"></span>
        </div>

        <div class="form-group text-center">
            <input type="submit" value="Save" class="btn btn-primary" />
            <a asp-action="Index" class="btn btn-secondary ml-2">Cancel</a>
        </div>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const offerTypeSelect = document.getElementById("OfferTypeSelect");
            const categorySelectDiv = document.getElementById("CategorySelectDiv");
            const productSelectDiv = document.getElementById("ProductSelectDiv");

            function toggleSelectDivs() {
                const selectedValue = offerTypeSelect.value;
                if (selectedValue === "Product") {
                    categorySelectDiv.style.display = "none";
                    productSelectDiv.style.display = "block";
                } else if (selectedValue === "Category") {
                    categorySelectDiv.style.display = "block";
                    productSelectDiv.style.display = "none";
                } else {
                    categorySelectDiv.style.display = "none";
                    productSelectDiv.style.display = "none";
                }
            }

            // Initial call to set the correct visibility based on the initial selection
            toggleSelectDivs();

            // Add event listener for change event
            offerTypeSelect.addEventListener("change", toggleSelectDivs);
        });
    </script>
}
